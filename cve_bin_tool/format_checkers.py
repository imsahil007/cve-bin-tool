import os

CHECKERS_TABLE_SIZE = 5


def checker_list():
    checkers_path = os.path.join(os.path.dirname(__file__), "checkers")
    file_list = set(os.listdir(checkers_path))
    exclude_files = {"README.md", "__init__.py", "__pycache__"}
    return sorted(list(file_list - exclude_files))


def reshape_list(checkers):
    return [
        checkers[i : i + CHECKERS_TABLE_SIZE]
        for i in range(0, len(checkers), CHECKERS_TABLE_SIZE)
    ]


def max_checker_length(checkers):
    checkers[-1].extend([""] * (CHECKERS_TABLE_SIZE - len(checkers[-1])))

    size_list = [0] * CHECKERS_TABLE_SIZE

    for row in range(CHECKERS_TABLE_SIZE):
        for index in range(len(checkers)):
            checker = checkers[index][row]
            if len(checker) > size_list[row]:
                size_list[row] = len(checker)
    return size_list


def reformat_checkers(checkers, size_array):

    checkers.insert(0, [""] * CHECKERS_TABLE_SIZE)
    checkers[0][CHECKERS_TABLE_SIZE // 2] = "Available checkers"

    markdown = "| "

    for row in checkers[0]:
        markdown += f" {row} |"
    markdown += "\n"

    markdown += "|"
    for index in range(len(checkers[0])):
        markdown += f"{'-'*size_array[index]} |"
    markdown += "\n"

    for row in checkers[1:]:
        markdown += "| "
        for checker in row:
            markdown += f"{checker} |"
        markdown += "\n"

    return markdown


def update_checker_table(file_path, markdown):

    lines = []
    start_index = None
    with open(file_path) as f:
        for index, line in enumerate(f):
            if "Available checkers" in line:
                start_index = index
            if not line.startswith("|"):
                lines.append(line)

    lines.insert(start_index, markdown)
    print(markdown)
    with open(file_path, "w") as f:
        f.writelines(lines)


if __name__ == "__main__":
    checkers_array = reshape_list(checker_list())
    shape_list = max_checker_length(checkers_array)
    checkers_markdown = reformat_checkers(checkers_array, shape_list)
    update_checker_table(
        file_path=os.path.join(os.path.abspath("."), "README.md"),
        markdown=checkers_markdown,
    )
    # update_checker_table(
    #     file_path=os.path.join(os.path.abspath(".."), "README.md"),
    #     markdown=checkers_markdown,
    # )
